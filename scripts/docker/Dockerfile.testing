# BAL Kit Testing Environment
# This Docker image provides an isolated environment for testing BAL Kit
# with all necessary dependencies pre-installed.

FROM php:8.2-cli

# Set working directory
WORKDIR /var/www/bal-kit

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip \
    nodejs \
    npm \
    sqlite3 \
    libsqlite3-dev &&
    docker-php-ext-install \
        pdo_sqlite \
        mbstring \
        exif \
        pcntl \
        bcmath \
        gd \
        zip &&
    apt-get clean &&
    rm -rf /var/lib/apt/lists/*

# Install Composer
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

# Set up non-root user for security
RUN groupadd -g 1000 balkit &&
    useradd -u 1000 -g balkit -s /bin/bash -m -d /home/balkit balkit

# Create directories with proper permissions
RUN mkdir -p /var/www/bal-kit /home/balkit/.composer &&
    chown -R balkit:balkit /var/www/bal-kit /home/balkit

# Switch to non-root user
USER balkit

# Set composer home
ENV COMPOSER_HOME=/home/balkit/.composer

# Set PHP memory limit for testing
ENV PHP_MEMORY_LIMIT=512M
RUN echo "memory_limit=${PHP_MEMORY_LIMIT}" >/tmp/php-memory.ini
USER root
RUN mv /tmp/php-memory.ini /usr/local/etc/php/conf.d/memory.ini
USER balkit

# Copy package source (will be overwritten by volume mount in docker-compose)
COPY --chown=balkit:balkit . /var/www/bal-kit/

# Install dependencies if composer.json exists
RUN test -f composer.json && composer install --no-dev --optimize-autoloader || true

# Default command runs the test script
CMD ["./scripts/docker/docker-test.sh"]
